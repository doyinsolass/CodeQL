name: Semgrep Security Scan

on:
  push:
    branches:
      - main

permissions:
  contents: read
  security-events: write


jobs:
  semgrep:
    name: Run Semgrep Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Semgrep
        run: pip install semgrep

      - name: Write custom JavaScript security rules
        run: |
          mkdir -p .semgrep
          echo "rules:" > .semgrep/security-rules.yml
          echo "  - id: detect-hardcoded-aws-secret-js" >> .semgrep/security-rules.yml
          echo "    pattern: const aws_secret_access_key = \"\$SECRET\"" >> .semgrep/security-rules.yml
          echo "    message: \"Hardcoded AWS secret detected.\"" >> .semgrep/security-rules.yml
          echo "    severity: ERROR" >> .semgrep/security-rules.yml
          echo "    languages: [javascript]" >> .semgrep/security-rules.yml
          echo "" >> .semgrep/security-rules.yml
          echo "  - id: detect-console-log-debug" >> .semgrep/security-rules.yml
          echo "    pattern: console.log(\$X)" >> .semgrep/security-rules.yml
          echo "    message: \"Debug console.log statement found; remove before production.\"" >> .semgrep/security-rules.yml
          echo "    severity: WARNING" >> .semgrep/security-rules.yml
          echo "    languages: [javascript]" >> .semgrep/security-rules.yml
          echo "" >> .semgrep/security-rules.yml
          echo "  - id: detect-eval-usage-js" >> .semgrep/security-rules.yml
          echo "    pattern: eval(\$EXPR)" >> .semgrep/security-rules.yml
          echo "    message: \"Use of eval() can lead to code injection vulnerabilities.\"" >> .semgrep/security-rules.yml
          echo "    severity: ERROR" >> .semgrep/security-rules.yml
          echo "    languages: [javascript]" >> .semgrep/security-rules.yml
          echo "" >> .semgrep/security-rules.yml
          echo "  - id: detect-function-constructor" >> .semgrep/security-rules.yml
          echo "    pattern: new Function(\$ARGS)" >> .semgrep/security-rules.yml
          echo "    message: \"Use of Function constructor can lead to security issues.\"" >> .semgrep/security-rules.yml
          echo "    severity: ERROR" >> .semgrep/security-rules.yml
          echo "    languages: [javascript]" >> .semgrep/security-rules.yml
          echo "" >> .semgrep/security-rules.yml
          echo "  - id: detect-settimeout-string" >> .semgrep/security-rules.yml
          echo "    pattern-either:" >> .semgrep/security-rules.yml
          echo "      - pattern: setTimeout(\"\$CODE\", ...)" >> .semgrep/security-rules.yml
          echo "      - pattern: setInterval(\"\$CODE\", ...)" >> .semgrep/security-rules.yml
          echo "    message: \"Avoid using string arguments in setTimeout/setInterval; potential code injection.\"" >> .semgrep/security-rules.yml
          echo "    severity: ERROR" >> .semgrep/security-rules.yml
          echo "    languages: [javascript]" >> .semgrep/security-rules.yml
          echo "" >> .semgrep/security-rules.yml
          echo "  - id: detect-document-write-js" >> .semgrep/security-rules.yml
          echo "    pattern: document.write(\$X)" >> .semgrep/security-rules.yml
          echo "    message: \"document.write() can lead to XSS vulnerabilities.\"" >> .semgrep/security-rules.yml
          echo "    severity: ERROR" >> .semgrep/security-rules.yml
          echo "    languages: [javascript]" >> .semgrep/security-rules.yml
          echo "" >> .semgrep/security-rules.yml
          echo "  - id: detect-innerhtml-assignment" >> .semgrep/security-rules.yml
          echo "    pattern: \$OBJ.innerHTML = \$VAL" >> .semgrep/security-rules.yml
          echo "    message: \"Assignment to innerHTML can lead to XSS vulnerabilities.\"" >> .semgrep/security-rules.yml
          echo "    severity: ERROR" >> .semgrep/security-rules.yml
          echo "    languages: [javascript]" >> .semgrep/security-rules.yml
          echo "" >> .semgrep/security-rules.yml
          echo "  - id: detect-localstorage-usage" >> .semgrep/security-rules.yml
          echo "    pattern: localStorage.setItem(\$KEY, \$VAL)" >> .semgrep/security-rules.yml
          echo "    message: \"Avoid storing sensitive data in localStorage.\"" >> .semgrep/security-rules.yml
          echo "    severity: WARNING" >> .semgrep/security-rules.yml
          echo "    languages: [javascript]" >> .semgrep/security-rules.yml
          echo "" >> .semgrep/security-rules.yml
          echo "  - id: detect-unsafe-regex" >> .semgrep/security-rules.yml
          echo "    pattern: new RegExp(\$PATTERN)" >> .semgrep/security-rules.yml
          echo "    message: \"Potentially unsafe regular expression. Validate input or use static patterns.\"" >> .semgrep/security-rules.yml
          echo "    severity: WARNING" >> .semgrep/security-rules.yml
          echo "    languages: [javascript]" >> .semgrep/security-rules.yml
          echo "" >> .semgrep/security-rules.yml
          echo "  - id: detect-insecure-http" >> .semgrep/security-rules.yml
          echo "    pattern: fetch(\"http://\$URL\", ...)" >> .semgrep/security-rules.yml
          echo "    message: \"Use HTTPS instead of HTTP for secure data transmission.\"" >> .semgrep/security-rules.yml
          echo "    severity: ERROR" >> .semgrep/security-rules.yml
          echo "    languages: [javascript]" >> .semgrep/security-rules.yml

      - name: Run Semgrep with custom rules and generate SARIF report
        run: semgrep --config=.semgrep/security-rules.yml --sarif --output=semgrep-results.sarif
        continue-on-error: true

      - name: Upload SARIF results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-results.sarif
